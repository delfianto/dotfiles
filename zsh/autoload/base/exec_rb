#!/bin/zsh
# File : exec_rb; Execute a Ruby util script given in the agrument.
# Usage: exec_rb [util_script_name.rb|util_script_name|full_path_to_script] [args...]

exec_rb() {
  if ! has_cmd -q ruby; then
    stderr "Error: Ruby is not installed. Please install Ruby to use this command."
    return 1
  fi

  if [[ -z "$1" ]]; then
    stderr "Error: No script name or path provided."
    return 2
  fi

  local first_arg="$1"
  local script_file
  shift

  # Check if the argument contains a slash, indicating it's meant as a path
  # This covers absolute paths (e.g., /foo/bar.rb) and relative paths
  # (e.g., ./foo.rb, ../foo.rb, foo/bar.rb)
  if [[ "$first_arg" == */* ]]; then
    script_file="$first_arg"
  else
    # No slash, assume it is a script name in $DOTDIR/utils
    if [[ "$first_arg" == *.rb ]]; then
      script_file="$DOTDIR/utils/$first_arg"
    else
      script_file="$DOTDIR/utils/${first_arg}.rb"
    fi
  fi

  # Check if the script exists and is executable
  # If it is executable, run it directly; otherwise, run it with Ruby
  if [[ -x $script_file ]]; then
    "$script_file" "$@"
  elif [[ -f $script_file ]]; then
    ruby "$script_file" "$@"
  else
    stderr "Error: Script not found, not a regular file, or not accessible: $script_file"
    return 3
  fi
}
