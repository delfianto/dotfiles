#!/bin/zsh
# File 01_common; Shell initialization script for all platforms

# --- Create kebab-case aliases for cmd_snake_case functions ---
# Iterate over all defined functions (keys of the 'functions' special associative array)
local func_name kebab_name
for func_name in ${(k)functions}; do
  # Check if the function name contains an underscore (likely snake_case)
  if [[ "${func_name}" == cmd_* ]]; then
    # Convert cmd_snake_case to kebab-case using parameter expansion
    kebab_name="${func_name//_/-}" && kebab_name="${kebab_name#cmd-}"

    # Ensure the kebab-case name is different from the original
    # and that no command (alias, function, builtin, external)
    # already exists with the kebab-case name.
    if [[ -n "${kebab_name}" ]] &&
       [[ "${kebab_name}" != "${func_name}" ]] &&
       ! command -v "${kebab_name}" > /dev/null 2>&1; then
      alias "${kebab_name}=${func_name}"
      (( ZSH_DEBUG_INIT )) && stdout "Aliased: ${kebab_name} -> ${func_name}"
    fi
  fi
done

unset func_name kebab_name

# --- Command replacements ---
if fn_check_command -q bat; then
  alias cat="bat"
fi

if fn_check_command -q duf; then
  alias df="duf"
else
  alias df="df -h"
fi

if fn_check_command -q gdu; then
  alias du="gdu"
else
  alias du="du -h"
  alias ds="du -hs"
fi

if fn_check_command -q eza; then
  alias ls="eza ${LS_ARGS}"
  alias ll="eza ${LS_ARGS} -l"
  alias la="eza ${LS_ARGS} -a"
  alias lla="eza ${LS_ARGS} -al"
else
  alias ls="ls ${LS_ARGS}"
  alias ll="ls ${LS_ARGS} -l"
  alias la="ls ${LS_ARGS} -a"
  alias lla="ls ${LS_ARGS} -al"
fi

if fn_check_command -q nvim; then
  alias vi="nvim"
  alias vim="nvim"
fi

# --- Rest of command alias ---
alias cls="clear && printf '\e[3J'"
alias cp="cp -v"
alias mv="mv -v"
alias sudo="sudo "
alias which="command -v"

# Colorful grep output
alias grep="grep -i --color=auto"
alias egrep="egrep -i --color=auto"
alias fgrep="fgrep -i --color=auto"

# Shell management
alias history="fc -li"
alias shdir="cd ${ZDOTDIR}"
alias reload="exec ${SHELL} -l"
